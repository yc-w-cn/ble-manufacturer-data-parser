import { readFileSync, writeFileSync } from "node:fs";
import { resolve } from "node:path";
import { parse } from "yaml";
import { formatValueToHex } from "../utils";

const convertYamlToTs = () => {
	// 读取 YAML 文件
	const yamlFilePath = resolve(__dirname, "../data/company_identifiers.yaml");
	const yamlContent = readFileSync(yamlFilePath, "utf-8");

	// 解析 YAML 文件
	const parsedData = parse(yamlContent) as {
		company_identifiers: { value: number; name: string }[];
	};

	// 转换为 Record<value, name>
	const recordData: Record<string, string> =
		parsedData.company_identifiers.reduce(
			(acc, item) => {
				const formattedValue = formatValueToHex(item.value);
				acc[formattedValue] = item.name;
				return acc;
			},
			{} as Record<string, string>,
		);

	// 将数据写入 TypeScript 文件
	const tsFilePath = resolve(__dirname, "../data/companyIdentifiers.ts");
	const tsContent = `
/**
 * Generated from company_identifiers.yaml
 * Do not edit this file manually.
 */
export const companyIdentifiers: Record<string, string> = ${JSON.stringify(recordData, null, 2)};
`;

	writeFileSync(tsFilePath, tsContent.trim());

	console.log(`YAML 文件已成功转换为 TypeScript 文件: ${tsFilePath}`);
};

convertYamlToTs();
